(()=>{"use strict";const e="local",t="staging",o="production",n={apiUrl:"https://api.tonicpow.com",apiUrlLocal:"http://localhost:3000",apiUrlStaging:"https://api.staging.tonicpow.com",apiUrlProduction:"https://api.tonicpow.com",customEnvironment:"data-environment",environment:o,environmentLocal:e,environmentStaging:t,environmentProduction:o,environments:[e,t,o],maxSessionDays:60,sessionName:"tncpw_session",version:"v0.0.4",widgetDivClass:"tonicpow-widget",widgetId:"data-widget-id",isEnvironmentValid:e=>n.environments.includes(e),setEnvironment:e=>{e&&n.isEnvironmentValid(e)&&(n.environment=e,e===n.environmentStaging?n.apiUrl=n.apiUrlStaging:e===n.environmentLocal?n.apiUrl=n.apiUrlLocal:e===n.environmentProduction&&(n.apiUrl=n.apiUrlProduction))}},i=n,r={removeStorage:e=>{try{localStorage.removeItem(e),localStorage.removeItem(`${e}_expiresIn`)}catch(t){return console.log(`removeStorage: Error removing key [${e}] from localStorage: ${JSON.stringify(t)}`),!1}return!0},getStorage:e=>{const t=Date.now();let o=localStorage.getItem(`${e}_expires`);if(null==o&&(o=0),o<t)return r.removeStorage(e),null;try{return localStorage.getItem(e)}catch(t){return console.log(`getStorage: Error reading key [${e}] from localStorage: ${JSON.stringify(t)}`),null}},setStorage:(e,t,o=null)=>{o=o?Math.abs(o):86400;const n=Date.now()+1e3*o;try{localStorage.setItem(e,t),localStorage.setItem(`${e}_expires`,n.toString())}catch(t){return console.log(`setStorage: Error setting key [${e}] in localStorage: ${JSON.stringify(t)}`),!1}return!0}},a={Config:i,Storage:r,setOreo:(e,t,o)=>{const n=new Date;n.setTime(n.getTime()+864e5*o),document.cookie=`${e}=${t};path=/;expires=${n.toUTCString()}`},captureVisitorSession:(e="")=>{let t=e;e&&e.length||"undefined"==typeof window||(t=new URLSearchParams(window.location.search).get(i.sessionName)),t&&t.length>0&&(a.setOreo(i.sessionName,t,i.maxSessionDays),a.Storage.setStorage(i.sessionName,t,86400*i.maxSessionDays))},getVisitorSession:()=>a.Storage.getStorage(i.sessionName),loadDivs:async()=>{const e=document.getElementsByClassName(i.widgetDivClass);for(let t=e.length-1;t>=0;t--){const o=e[t],n=o.getAttribute(i.widgetId);if(!n){console.log(`${n} not found`);continue}const r=o.getAttribute(i.customEnvironment);i.setEnvironment(r);const a=await fetch(`${i.apiUrl}/v1/widgets/display/${n}?provider=embed-${i.version}`),s=await a.json(),l=encodeURIComponent(s.title);o.innerHTML=`\n    <a href="${s.link_url}?utm_source=tonicpow-widgets&utm_medium=widget&utm_campaign=${n}&utm_content=${l}">\n      <img src="${s.image_url}" \n      width="${s.width}" \n      height="${s.height}" \n      alt="${s.title}" />\n    </a>`,o.setAttribute("data-width",s.width),o.setAttribute("data-height",s.height)}},load:()=>{if("undefined"==typeof window)return void console.error("TonicPow embed only works in the browser");const e=document.getElementsByClassName(i.widgetDivClass);e&&e.length>0&&a.loadDivs().then((()=>{console.log("TonicPow widget(s) loaded!")})),a.captureVisitorSession()}};"complete"===document.readyState||"interactive"===document.readyState?a.load():document.addEventListener("DOMContentLoaded",(()=>{a.load()})),"undefined"!=typeof window&&(window.TonicPow=a)})();